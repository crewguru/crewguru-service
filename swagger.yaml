swagger: "2.0"
info:
  version: 1.0.0
  title: crewguru
  description: CrewGuru REST API
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: foo@example.com
    url: http://madskristensen.net
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: crewguru.apiary.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      description: |
        Returns all users from the system that the user has access to 
        FOR DEBUGGING ONLY
      operationId: getUsers
      responses:
        200:
          description: getUsers response
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new User.  Duplicates not allowed
      operationId: addUser
      parameters:
        - name: user
          in: body
          description: Add New User
          required: true
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        200:
          description: addUser response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{id}:
    get:
      description: Returns a user based on a single ID
      operationId: findUser
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: findUser response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single user based on the ID supplied
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: deleteUser response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{id}/profiles:
    get:
      description: Returns user profiles based on a userId
      operationId: getUserProfiles
      parameters:
        - name: id
          in: path
          description: ID of user to fetch profiles for
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: getUserProfiles response
          schema:
            type: array
            items:
              $ref: '#/definitions/Profile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new profile. Duplicates not allowed
      operationId: addProfile
      parameters:
        - name: profile
          in: body
          description: Profile to create
          required: true
          schema:
            $ref: '#/definitions/NewProfile'
        - name: id 
          in: path
          description: User id so use when creating profile
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: addUser response
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/profiles/{id}:
    get:
      description: Returns a user profile based on profile id
      operationId: findUserProfile
      parameters:
        - name: id
          in: path
          description: ID of the profile to find
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: findUserProfile response
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single profile based on the ID supplied
      operationId: deleteProfile
      parameters:
        - name: id
          in: path
          description: ID of profile to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: deleteProfile response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{id}/projects:
    get:
      description: Returns user projects based on a userId
      operationId: getUserProjects
      parameters:
        - name: id
          in: path
          description: ID of user to fetch projects for
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: getUserProjects response
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new project.
      operationId: addProject
      parameters:
        - name: profile
          in: body
          description: Project to create
          required: true
          schema:
            $ref: '#/definitions/NewProject'
        - name: id 
          in: path
          description: User id so use when creating project
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: addUser response
          schema:
            $ref: '#/definitions/Project'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/projects/{id}:
    get:
      description: Returns a user project based on project id
      operationId: findUserProject
      parameters:
        - name: id
          in: path
          description: ID of the project to find
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: findUserProfile response
          schema:
            $ref: '#/definitions/Project'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single project based on the ID supplied
      operationId: deleteProject
      parameters:
        - name: id
          in: path
          description: ID of project to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: deleteProject response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /industries:
    get:
      description: Returns a list of industries
      operationId: getIndustries
      responses:
        200: 
          description: getIndustries Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Industry'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /industries/{id}:
    get:
      description: Returns an industry by id
      operationId: findIndustry
      parameters:
        - name: id
          in: path
          description: ID of the industry to find
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: findIndustry response
          schema:
            $ref: '#/definitions/Industry'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /locations:
    get:
      description: Returns a list of locations
      operationId: getLocations
      responses:
        200: 
          description: getLocations Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /locations/{id}:
    get:
      description: Returns a location by id
      operationId: findLocation
      parameters:
        - name: id
          in: path
          description: ID of the location to find
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: findLocation response
          schema:
            $ref: '#/definitions/Location'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    allOf:
      - $ref: '#/definitions/NewUser'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewUser:
    required:
      - name
      - firstName
      - lastName
      - email
    properties:
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
  Profile:
    allOf:
      - $ref: '#/definitions/NewProfile'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewProfile:
    required:
      - userId
    properties:
      userId: 
        type: integer
        format: int64
      profession: 
        type: string
      profileImage:
        type: string
      backgroundImage:
        type: string
      profileName:
        type: string
      profileDescription:
        type: string
      createdDate:
        type: string
        format: date-time
      updatedDate:
        type: string
        format: date-time
      twitterLink:
        type: string
      facebookLink:
        type: string
      instagramLink:
        type: string
      linkedinLink:
        type: string
      aboutMe:
        type: string
      availabilityHire:
        type: boolean
      website:
        type: string
      skills:
        type: string
      phonenumber:
        type: string
      phoneext:
        type: string
      industry:
        type: string
      workCategory:
        type: string
  Project:
    allOf:
      - $ref: '#/definitions/NewProject'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewProject:
    required:
      - name
    properties:
      name:
        type: string
      images:
        type: string
      description:
        type: string
      details:
        type: string
      field:
        type: string
      location:
        type: string
  WorkExperience:
    allOf:
      - $ref: '#/definitions/NewWorkExperience'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewWorkExperience:
    properties:
      userId:
        type: integer
        format: int64
      company:
        type: string
      description:
        type: string
      jobTitle:
        type: string
      fromDate:
        type: string
        format: date
      toDate:
        type: string
        format: date
      workDates:
        type: string
  Industry:
    required:
      - id
      - name
    properties:
      id: 
        type: integer
        format: int64
      name: 
        type: string
  WorkCategory:
    required:
      - id
      - name
    properties:
      id: 
        type: integer
        format: int64
      name: 
        type: string
  Location:
    required:
      - id
    properties:
      id: 
        type: integer
        format: int64
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      type: 
        type: string
      country:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string